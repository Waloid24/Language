push 0;
pop rax;
push 10;
pop rbx;
push 0;
pop [rbx + 0];
push 0;
pop [rbx + 1];
push 0;
pop [rbx + 2];
in;
pop [rbx + 0];
in;
pop [rbx + 1];
in;
pop [rbx + 2];
push [rbx + 0];
push 0;
be;
push 0;
je else0:;
push [rbx + 1];
push 0;
be;
push 0;
je else1:;
push [rbx + 2];
push 0;
bne;
push 0;
je else2:;
push 666000;
out;
hlt;
jmp elseExit2:;
else2:;
push 777000;
out;
hlt;
elseExit2:;
jmp elseExit1:;
else1:;
push -1000;
push [rbx + 2];
mul;
push [rbx + 1];
div;
pop [rbx + 3];
push [rbx + 3];
out;
hlt;
elseExit1:;
jmp elseExit0:;
else0:;
push [rbx + 1];
push [rbx + 1];
mul;
push 4000;
push [rbx + 0];
mul;
push [rbx + 2];
mul;
sub;
pop [rbx + 4];
push [rbx + 4];
out;
push -1000;
push [rbx + 1];
mul;
out;
push [rbx + 4];
push 0;
be;
push 0;
je else3:;
push -1000;
push [rbx + 1];
mul;
push 2000;
push [rbx + 0];
mul;
div;
pop [rbx + 3];
push [rbx + 3];
out;
hlt;
jmp elseExit3:;
else3:;
push -1000;
push [rbx + 1];
mul;
push [rbx + 4];
sqrt;
add;
push 2000;
push [rbx + 0];
mul;
div;
pop [rbx + 5];
push -1000;
push [rbx + 1];
mul;
push [rbx + 4];
sqrt;
sub;
push 2000;
push [rbx + 0];
mul;
div;
pop [rbx + 6];
push [rbx + 5];
out;
push [rbx + 6];
out;
hlt;
elseExit3:;
elseExit0:;
